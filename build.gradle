
buildscript {
    ext.kotlin_version = '1.2.20'
    ext.jsTargetDir = file("${rootProject.buildDir.path}/js")
    println(jsTargetDir)

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}

apply plugin: 'kotlin-platform-common'

/* Utility function. */
project.ext.fmtMods = { mods -> mods.collect { it.toString().substring(8) }.join(', ') }

/* All the projects (including this top-level one). */
allprojects {
    group 'demo'
    version '1.0.0'

    repositories {
        mavenCentral()
    }

    /* Merge all the build directories into one. */
    buildDir = rootProject.file('build')

    /* Remove the possibility of java files because empty directories give warnings. */
    // TODO: this doesn't remove the warnings? not all of them at least?
    sourceSets {
        main.java.srcDirs = ["src/main/java"] // TODO: empty?
        test.java.srcDirs = ["src/main/java", "src/test/java"] // TODO: empty?
        main.kotlin.srcDirs = ["src/main/kotlin"] // TODO: can this be removed? it was recommended for test-cant-see-code problem
        test.kotlin.srcDirs = ["src/main/kotlin", "src/test/kotlin"] // TODO: can this be removed? it was recommended for test-cant-see-code problem
    }
}

/* Platform and common configuration have their own files. */
apply from: 'platform_common.gradle'
apply from: 'platform_jvm.gradle'
apply from: 'platform_js.gradle'

task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}

dependencies {
    compile project(":alpha")
    testCompile 'org.hamcrest:hamcrest-core:1.3'
}


