
buildscript {
    ext.kotlin_version = '1.2.20'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin-platform-common'

/* All the projects (including this top-level one). */
allprojects {
    group 'demo'
    version '1.0.0'

    repositories {
        mavenCentral()
    }

    /* Merge all the build directories into one. */
    buildDir = rootProject.file('build')
}

/* Platform and common configuration have their own files. */
project.ext.common_submods = subprojects.findAll {
    !it.name.endsWith('-jvm') && !it.name.endsWith('-js') // && !it.name.endsWith('-native')
}

/* All the common subprojects (including this top-level one), but no platform projects. */
configure(common_submods) {
    apply plugin: 'kotlin-platform-common'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-common:$kotlin_version"
    }
}

project.ext.jvm_submods = subprojects.findAll {
    it.name.endsWith('-jvm')
}

/* All JVM platform subprojects. */
configure(jvm_submods) {
    apply plugin: 'kotlin-platform-jvm'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        testCompile 'junit:junit:4.12'
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    }
}

dependencies {
    compile project(":alpha")
    testCompile 'org.hamcrest:hamcrest-core:1.3'
}


